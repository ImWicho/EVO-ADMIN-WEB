# Template docker-push

# This template allows you to build and push your docker image to a Docker Hub account.
# The workflow allows running tests, code linting and security scans on feature branches (as well as master).
# The docker image will be validated and pushed to the docker registry after the code is merged to develop qa or master.

image: atlassian/default-image:2

pipelines:
  branches:
    qa:
      - step:
          name: Build
          script:
            - IMAGE_NAME=$BITBUCKET_REPO_SLUG
            - docker build . -t ${IMAGE_NAME}
            - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}.tar"
          services:
            - docker
          caches:
            - docker
          artifacts:
            - "*.tar"
      - step:
          name: Push Docker File to GC Container Registry
          image: google/cloud-sdk:latest
          deployment: QA
          script:
            - echo $GCLOUD_API_KEYFILE > ~/.gcloud-api-key.json
            - gcloud auth activate-service-account --key-file ~/.gcloud-api-key.json
            - docker login -u _json_key --password-stdin https://$DOCKER_GCR_REPO_URL < ~/.gcloud-api-key.json
            - IMAGE_NAME=$BITBUCKET_REPO_SLUG
            - docker load --input "${IMAGE_NAME}.tar"
            - VERSION="qa-0.1.${BITBUCKET_BUILD_NUMBER}"
            - IMAGE=${DOCKER_GCR_REPO_URL}/${GCLOUD_PROJECT_ID}/${IMAGE_NAME}
            - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
            - docker push "${IMAGE}:${VERSION}"
            - gcloud container clusters get-credentials $K8s_CLUSTER_NAME --zone=$GCLOUD_ZONE --project $GCLOUD_PROJECT_ID
            - kubectl set image deployment $K8s_DEPLOYMENT_NAME $K8s_DEPLOYMENT_NAME=$DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$DOCKER_IMAGE_NAME:${VERSION} --record=true --namespace=$K8s_NAMESPACE
          services:
            - docker
definitions:
  services:
    docker:
      memory: 3072
